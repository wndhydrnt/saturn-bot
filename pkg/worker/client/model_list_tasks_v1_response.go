/*
saturn-bot server API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListTasksV1Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasksV1Response{}

// ListTasksV1Response struct for ListTasksV1Response
type ListTasksV1Response struct {
	// Names of registered tasks.
	Tasks []string `json:"tasks"`
}

type _ListTasksV1Response ListTasksV1Response

// NewListTasksV1Response instantiates a new ListTasksV1Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasksV1Response(tasks []string) *ListTasksV1Response {
	this := ListTasksV1Response{}
	this.Tasks = tasks
	return &this
}

// NewListTasksV1ResponseWithDefaults instantiates a new ListTasksV1Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasksV1ResponseWithDefaults() *ListTasksV1Response {
	this := ListTasksV1Response{}
	return &this
}

// GetTasks returns the Tasks field value
func (o *ListTasksV1Response) GetTasks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *ListTasksV1Response) GetTasksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *ListTasksV1Response) SetTasks(v []string) {
	o.Tasks = v
}

func (o ListTasksV1Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasksV1Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tasks"] = o.Tasks
	return toSerialize, nil
}

func (o *ListTasksV1Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tasks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListTasksV1Response := _ListTasksV1Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListTasksV1Response)

	if err != nil {
		return err
	}

	*o = ListTasksV1Response(varListTasksV1Response)

	return err
}

type NullableListTasksV1Response struct {
	value *ListTasksV1Response
	isSet bool
}

func (v NullableListTasksV1Response) Get() *ListTasksV1Response {
	return v.value
}

func (v *NullableListTasksV1Response) Set(val *ListTasksV1Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasksV1Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasksV1Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasksV1Response(val *ListTasksV1Response) *NullableListTasksV1Response {
	return &NullableListTasksV1Response{value: val, isSet: true}
}

func (v NullableListTasksV1Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasksV1Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


