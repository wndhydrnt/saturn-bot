/*
saturn-bot server API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReportWorkV1RequestTaskResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportWorkV1RequestTaskResultsInner{}

// ReportWorkV1RequestTaskResultsInner struct for ReportWorkV1RequestTaskResultsInner
type ReportWorkV1RequestTaskResultsInner struct {
	Name string `json:"name"`
	Result int32 `json:"result"`
}

type _ReportWorkV1RequestTaskResultsInner ReportWorkV1RequestTaskResultsInner

// NewReportWorkV1RequestTaskResultsInner instantiates a new ReportWorkV1RequestTaskResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportWorkV1RequestTaskResultsInner(name string, result int32) *ReportWorkV1RequestTaskResultsInner {
	this := ReportWorkV1RequestTaskResultsInner{}
	this.Name = name
	this.Result = result
	return &this
}

// NewReportWorkV1RequestTaskResultsInnerWithDefaults instantiates a new ReportWorkV1RequestTaskResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportWorkV1RequestTaskResultsInnerWithDefaults() *ReportWorkV1RequestTaskResultsInner {
	this := ReportWorkV1RequestTaskResultsInner{}
	return &this
}

// GetName returns the Name field value
func (o *ReportWorkV1RequestTaskResultsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ReportWorkV1RequestTaskResultsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ReportWorkV1RequestTaskResultsInner) SetName(v string) {
	o.Name = v
}

// GetResult returns the Result field value
func (o *ReportWorkV1RequestTaskResultsInner) GetResult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ReportWorkV1RequestTaskResultsInner) GetResultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *ReportWorkV1RequestTaskResultsInner) SetResult(v int32) {
	o.Result = v
}

func (o ReportWorkV1RequestTaskResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportWorkV1RequestTaskResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

func (o *ReportWorkV1RequestTaskResultsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"result",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReportWorkV1RequestTaskResultsInner := _ReportWorkV1RequestTaskResultsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReportWorkV1RequestTaskResultsInner)

	if err != nil {
		return err
	}

	*o = ReportWorkV1RequestTaskResultsInner(varReportWorkV1RequestTaskResultsInner)

	return err
}

type NullableReportWorkV1RequestTaskResultsInner struct {
	value *ReportWorkV1RequestTaskResultsInner
	isSet bool
}

func (v NullableReportWorkV1RequestTaskResultsInner) Get() *ReportWorkV1RequestTaskResultsInner {
	return v.value
}

func (v *NullableReportWorkV1RequestTaskResultsInner) Set(val *ReportWorkV1RequestTaskResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableReportWorkV1RequestTaskResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableReportWorkV1RequestTaskResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportWorkV1RequestTaskResultsInner(val *ReportWorkV1RequestTaskResultsInner) *NullableReportWorkV1RequestTaskResultsInner {
	return &NullableReportWorkV1RequestTaskResultsInner{value: val, isSet: true}
}

func (v NullableReportWorkV1RequestTaskResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportWorkV1RequestTaskResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


